// <auto-generated />
using CarZone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarZone.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20230514222430_Atualizacoes")]
    partial class Atualizacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarZone.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientesDB");
                });

            modelBuilder.Entity("CarZone.Models.Marcas", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"), 1L, 1);

                    b.Property<string>("MarcaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModeloVeiculosId")
                        .HasColumnType("int");

                    b.HasKey("MarcaId");

                    b.HasIndex("ModeloVeiculosId");

                    b.ToTable("MarcasDB");
                });

            modelBuilder.Entity("CarZone.Models.ModeloVeiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModeloVeiculosDB");
                });

            modelBuilder.Entity("CarZone.Models.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoId"), 1L, 1);

                    b.Property<string>("CategoriaVeiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meses")
                        .HasColumnType("int");

                    b.Property<string>("NomePagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PagamentoId");

                    b.ToTable("PagamentosDB");
                });

            modelBuilder.Entity("CarZone.Models.Veiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int>("Placa")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<bool>("StatusVenda")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId")
                        .IsUnique();

                    b.ToTable("VeiculosDB");
                });

            modelBuilder.Entity("CarZone.Models.Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DataVenda")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VeiculosId");

                    b.ToTable("VendasDB");
                });

            modelBuilder.Entity("CarZone.Models.Marcas", b =>
                {
                    b.HasOne("CarZone.Models.ModeloVeiculos", "ModeloVeiculos")
                        .WithMany("Marca")
                        .HasForeignKey("ModeloVeiculosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModeloVeiculos");
                });

            modelBuilder.Entity("CarZone.Models.Veiculos", b =>
                {
                    b.HasOne("CarZone.Models.Marcas", "Marca")
                        .WithOne("Veiculo")
                        .HasForeignKey("CarZone.Models.Veiculos", "MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("CarZone.Models.Vendas", b =>
                {
                    b.HasOne("CarZone.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarZone.Models.Veiculos", "Veiculos")
                        .WithMany()
                        .HasForeignKey("VeiculosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("CarZone.Models.Marcas", b =>
                {
                    b.Navigation("Veiculo")
                        .IsRequired();
                });

            modelBuilder.Entity("CarZone.Models.ModeloVeiculos", b =>
                {
                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
